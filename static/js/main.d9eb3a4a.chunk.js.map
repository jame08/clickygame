{"version":3,"sources":["components/GameCards/GameCards.js","components/Wrapper/Wrapper.js","components/NavBar/NavBar.js","App.js","index.js"],"names":["GameCards","props","react_default","a","createElement","className","alt","name","src","image","onClick","shuffleArray","id","Wrapper","children","NavBar","href","score","App","state","cards","gameOver","newArr","_this","map","card","attr","Math","random","sort","b","setState","console","log","find","x","length","arr","alert","_this2","this","components_NavBar_NavBar","components_Wrapper_Wrapper","Card","components_GameCards_GameCards","key","Component","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"ypDAceA,SAXG,SAAAC,GAAK,OAGrBC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACbH,EAAAC,EAAAC,cAAA,OAAKE,IAAKL,EAAMM,KAAMC,IAAKP,EAAMQ,MAAQC,QAAW,kBAAMT,EAAMU,aAAaV,EAAMW,WCH1EC,SAFC,SAAAZ,GAAK,OAAIC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WAAWJ,EAAMa,YCa1CC,SAbA,SAAAd,GAAK,OAGpBC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACfH,EAAAC,EAAAC,cAAA,UACAF,EAAAC,EAAAC,cAAA,MAAIC,UAAU,SAAQH,EAAAC,EAAAC,cAAA,KAAGY,KAAO,KAAV,gBACtBd,EAAAC,EAAAC,cAAA,MAAIC,UAAU,IAAd,4BACAH,EAAAC,EAAAC,cAAA,mBAAWH,EAAMgB,kBCyFFC,oNAzFbC,MAAQ,CACNC,QACAH,MAAO,KAITI,SAAW,WAET,IAAMC,EAASC,EAAKJ,MAAMC,MAAMI,IAAI,SAAAC,GAAI,MAAK,CAACb,GAAIa,EAAKb,GAAGL,KAAKkB,EAAKlB,KAAKE,MAAMgB,EAAKhB,MAAMiB,MAAM,KAASF,IAAI,SAAArB,GAAC,MAAI,CAACwB,KAAKC,SAAUzB,KACjI0B,KAAK,SAAC1B,EAAG2B,GAAJ,OAAU3B,EAAE,GAAK2B,EAAE,KACxBN,IAAI,SAAArB,GAAC,OAAIA,EAAE,KAGZoB,EAAKQ,SACH,CACEX,MAAOE,EACPL,MAAO,IAGXe,QAAQC,IAAI,WAKdtB,aAAgB,SAAAC,GAIdW,EAAKJ,MAAMC,MAAMc,KAAM,SAAAC,GAGrB,GAAGZ,EAAKJ,MAAMF,MAAQM,EAAKJ,MAAMC,MAAMgB,OAAS,GAE9C,GAAID,EAAEvB,KAAOA,EAAK,CAEhB,IAAc,IAAXuB,EAAET,KAAe,CAClBS,EAAET,MAAO,EACTH,EAAKQ,SAAS,CAACd,MAAOM,EAAKJ,MAAMF,MAAQ,IACzC,IAAMoB,EAAMd,EAAKJ,MAAMC,MACtBI,IAAI,SAAArB,GAAC,MAAI,CAACwB,KAAKC,SAAUzB,KACzB0B,KAAK,SAAC1B,EAAG2B,GAAJ,OAAU3B,EAAE,GAAK2B,EAAE,KACxBN,IAAI,SAAArB,GAAC,OAAIA,EAAE,KAIjB,OAFKoB,EAAKQ,SAAS,CAACX,MAAOiB,KAEpB,EAGJd,EAAKF,iBAOPiB,MAAM,kFAQH,IAAAC,EAAAC,KACP,OAEJtC,EAAAC,EAAAC,cAAA,WAEMF,EAAAC,EAAAC,cAACqC,EAAD,CAAQxB,MAAQuB,KAAKrB,MAAMF,QAE3Bf,EAAAC,EAAAC,cAACsC,EAAD,KACGF,KAAKrB,MAAMC,MAAMI,IAAI,SAAAmB,GAAI,OACxBzC,EAAAC,EAAAC,cAACwC,EAAD,CACEjC,aAAc4B,EAAK5B,aACnBC,GAAI+B,EAAK/B,GACTiC,IAAKF,EAAK/B,GACVH,MAAOkC,EAAKlC,MACZiB,KAAQiB,EAAKjB,kBA/EPoB,oBCHlBC,IAASC,OAAO9C,EAAAC,EAAAC,cAAC6C,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.d9eb3a4a.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./GameCards.css\";\n\nconst GameCards = props => (\n\n\n  <div className=\"card\">\n    <div className=\"img-container\"  >\n      <img alt={props.name} src={props.image}  onClick = {() => props.shuffleArray(props.id)}/>\n    </div>\n  </div>\n\n);\n\nexport default GameCards;\n","import React from \"react\";\nimport \"./Wrapper.css\";\n\nconst Wrapper = props => <div className=\"wrapper\">{props.children}</div>;\n\nexport default Wrapper;\n","import React from \"react\";\nimport \"./NavBar.css\";\n\nconst NavBar = props => (\n\n\n<nav className=\"navbar\">\n<ul>\n<li className=\"brand\"><a href = \"/\">Clicky Game</a></li>\n<li className=\"\">Click an image to begin!</li>\n<li>Score:{props.score}</li>\n</ul>\n</nav>\n\n);\n\nexport default NavBar;\n\n\n","import React, { Component } from \"react\";\nimport GameCards from \"./components/GameCards\"\nimport Wrapper from \"./components/Wrapper\";\nimport NavBar from \"./components/NavBar\";\nimport cards from \"./Cards.json\";\nimport \"./App.css\";\n\n\nclass App extends Component {\n  // Setting this.state.cards to the cards json array\n  state = {\n    cards,\n    score: 0\n  };\n\n  \n  gameOver = () => {\n\n    const newArr = this.state.cards.map(card => ({id: card.id,name:card.name,image:card.image,attr: false})).map(a => [Math.random(), a])\n    .sort((a, b) => a[0] - b[0])\n    .map(a => a[1]);\n\n  \n    this.setState(\n      {\n        cards: newArr,\n        score: 0 \n      }\n      );\n    console.log(\"over\");\n    \n\n  }\n\n  shuffleArray =  id => {\n\n\n\n    this.state.cards.find( x => {\n      \n\n      if(this.state.score < this.state.cards.length - 1){\n\n        if (x.id === id  ){\n\n          if(x.attr === false){\n            x.attr = true;\n            this.setState({score: this.state.score + 1});\n            const arr = this.state.cards\n            .map(a => [Math.random(), a])\n            .sort((a, b) => a[0] - b[0])\n            .map(a => a[1]);\n  \n            this.setState({cards: arr })\n  \n       return true;\n  \n      }else {\n          this.gameOver();\n  \n          }\n        } //big if\n\n      }\n      else {\n        alert(\"Won\");\n\n      }\n\n    });\n\n  }\n\n  render() {\n    return (\n      \n<div>\n\n      <NavBar score= {this.state.score}></NavBar>\n      \n      <Wrapper>\n        {this.state.cards.map(Card => (\n          <GameCards\n            shuffleArray={this.shuffleArray}\n            id={Card.id}\n            key={Card.id}\n            image={Card.image}\n            attr = {Card.attr}\n  \n          />\n        ))}\n        </Wrapper>\n\n      </div>\n     \n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}